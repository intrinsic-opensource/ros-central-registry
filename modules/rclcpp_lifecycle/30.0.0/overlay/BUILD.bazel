# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@rosidl_generator_cpp//:rules.bzl", "cc_ros_library")

package(default_visibility = ["//visibility:public"])

# Libraries

cc_ros_library(
    name = "msgs",
    deps = [
        "@lifecycle_msgs//msg:State",
        "@lifecycle_msgs//msg:Transition",
        "@lifecycle_msgs//msg:TransitionDescription",
        "@lifecycle_msgs//msg:TransitionEvent",
        "@lifecycle_msgs//srv:ChangeState",
        "@lifecycle_msgs//srv:GetAvailableStates",
        "@lifecycle_msgs//srv:GetAvailableTransitions",
        "@lifecycle_msgs//srv:GetState",
    ],
)

cc_library(
    name = "rclcpp_lifecycle",
    hdrs = glob(["include/**/*.h", "include/**/*.hpp"]),
    srcs = glob(["src/**/*.hpp", "src/**/*.cpp"]),
    includes = ["include"],
    local_defines = ["ROS_PACKAGE_NAME=\\\"rclcpp_lifecycle\\\""],
    deps = [
        "@rcl_lifecycle",
        "@rclcpp",
        ":msgs",
    ],
)

# Tests

cc_library(
    name = "rclcpp_lifecycle_mock",
    hdrs = glob(["include/**/*.h", "include/**/*.hpp"]),
    srcs = [":rclcpp_lifecycle"],
    includes = ["include"],
    local_defines = ["ROS_PACKAGE_NAME=\\\"rclcpp_lifecycle\\\""],
    deps = [
        "@rcl_lifecycle",
        "@rclcpp",
        ":msgs",
    ],
)
cc_ros_library(
    name = "test_msgs",
    deps = [
        "@rcl_interfaces//srv:GetLoggerLevels",
        "@rcl_interfaces//srv:ListParameters",
        "@rcl_interfaces//srv:SetLoggerLevels",
        "@test_msgs//msg:Empty",
        "@test_msgs//srv:Empty",
    ],
)

[
    cc_test(
        name = test,
        srcs = ["test/{}.cpp".format(test)] + ["test/mocking_utils/patch.hpp"],
        local_defines = ["ROS_PACKAGE_NAME=\\\"rclcpp_lifecycle\\\""],
        deps = [
            "@googletest//:gtest_main",
            "@googletest//:gtest",
            "@mimick",
            ":test_msgs",
            ":rclcpp_lifecycle_mock",
        ],
        timeout = "moderate",
    )
    for test in [
        "test_callback_exceptions",
        "test_client",
        "test_lifecycle_node",
        "test_lifecycle_node_errors",
        "test_lifecycle_publisher",
        "test_lifecycle_service_client",
        "test_register_custom_callbacks",
        "test_service",
        "test_state_machine_info",
        "test_state_wrapper",
        "test_transition_wrapper",
    ]
]


[
    cc_test(
        name = name,
        srcs = ["test/benchmark/{}.cpp".format(name)],
        deps = [
            "@google_benchmark//:benchmark_main",
            "@performance_test_fixture",
            ":rclcpp_lifecycle_mock",
            ":test_msgs",
        ],
        local_defines = ["ROS_PACKAGE_NAME=\\\"rclcpp_lifecycle\\\""],
        timeout = "moderate",
    )
    for name in [
        "benchmark_lifecycle_client",
        "benchmark_lifecycle_node",
        "benchmark_state",
        "benchmark_transition",
    ]
]
