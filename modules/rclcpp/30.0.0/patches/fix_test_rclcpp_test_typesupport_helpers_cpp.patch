diff --git a/rclcpp/test/rclcpp/test_typesupport_helpers.cpp b/rclcpp/test/rclcpp/test_typesupport_helpers.cpp
index bbd45772..9cec6164 100644
--- a/rclcpp/test/rclcpp/test_typesupport_helpers.cpp
+++ b/rclcpp/test/rclcpp/test_typesupport_helpers.cpp
@@ -46,6 +46,8 @@ TEST(TypesupportHelpersTest, throws_exception_if_library_cannot_be_found) {
     std::runtime_error);
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, returns_c_type_info_for_valid_legacy_library) {
   try {
     auto library = rclcpp::get_typesupport_library(
@@ -61,6 +63,8 @@ TEST(TypesupportHelpersTest, returns_c_type_info_for_valid_legacy_library) {
   }
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, returns_c_type_info_for_valid_library) {
   try {
     auto library = rclcpp::get_typesupport_library(
@@ -76,6 +80,8 @@ TEST(TypesupportHelpersTest, returns_c_type_info_for_valid_library) {
   }
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, returns_service_type_info_for_valid_legacy_library) {
   try {
     auto library = rclcpp::get_typesupport_library(
@@ -91,6 +97,8 @@ TEST(TypesupportHelpersTest, returns_service_type_info_for_valid_legacy_library)
   }
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, returns_service_type_info_for_valid_library) {
   try {
     auto library = rclcpp::get_typesupport_library(
@@ -106,6 +114,8 @@ TEST(TypesupportHelpersTest, returns_service_type_info_for_valid_library) {
   }
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, returns_action_type_info_for_valid_legacy_library) {
   try {
     auto library = rclcpp::get_typesupport_library(
@@ -121,6 +131,8 @@ TEST(TypesupportHelpersTest, returns_action_type_info_for_valid_legacy_library)
   }
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, returns_action_type_info_for_valid_library) {
   try {
     auto library = rclcpp::get_typesupport_library(
@@ -136,6 +148,8 @@ TEST(TypesupportHelpersTest, returns_action_type_info_for_valid_library) {
   }
 }
 
+// TODO(asymingt) fix generic clients (dynamic type loading) and mocking.
+// See: https://github.com/intrinsic-opensource/ros-central-registry/issues/66
 TEST(TypesupportHelpersTest, test_throw_exception_with_invalid_type) {
   // message
   std::string invalid_type = "test_msgs/msg/InvalidType";