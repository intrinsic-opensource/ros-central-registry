diff --git a/rcl/test/rcl/test_publisher.cpp b/rcl/test/rcl/test_publisher.cpp
index 1564b50..02e2d1a 100644
--- a/rcl/test/rcl/test_publisher.cpp
+++ b/rcl/test/rcl/test_publisher.cpp
@@ -615,6 +615,7 @@ TEST_F(TestPublisherFixture, test_invalid_publisher) {
 
 // Mocking rmw_publisher_count_matched_subscriptions to make
 // rcl_publisher_get_subscription_count fail
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixtureInit, test_mock_publisher_get_subscription_count)
 {
   auto mock = mocking_utils::patch_and_return(
@@ -631,6 +632,7 @@ TEST_F(TestPublisherFixtureInit, test_mock_publisher_get_subscription_count)
 
 // Mocking rmw_publisher_assert_liveliness to make
 // rcl_publisher_assert_liveliness fail
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixtureInit, test_mock_assert_liveliness) {
   auto mock = mocking_utils::patch_and_return(
     "lib:rcl", rmw_publisher_assert_liveliness, RMW_RET_ERROR);
@@ -650,6 +652,7 @@ MOCKING_UTILS_BOOL_OPERATOR_RETURNS_FALSE(rmw_time_t, !=)
 MOCKING_UTILS_BOOL_OPERATOR_RETURNS_FALSE(rmw_time_t, <)
 MOCKING_UTILS_BOOL_OPERATOR_RETURNS_FALSE(rmw_time_t, >)
 
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixtureInit, test_mock_assert_wait_for_all_acked)
 {
   rcl_ret_t ret;
@@ -709,6 +712,7 @@ TEST_F(TestPublisherFixtureInit, test_mock_assert_wait_for_all_acked)
 }
 
 // Mocking rmw_publish to make rcl_publish fail
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixtureInit, test_mock_publish) {
   auto mock = mocking_utils::patch_and_return("lib:rcl", rmw_publish, RMW_RET_ERROR);
 
@@ -724,6 +728,7 @@ TEST_F(TestPublisherFixtureInit, test_mock_publish) {
 }
 
 // Mocking rmw_publish_serialized_message to make rcl_publish_serialized_message fail
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixtureInit, test_mock_publish_serialized_message)
 {
   rcl_serialized_message_t serialized_msg = rmw_get_zero_initialized_serialized_message();
@@ -775,6 +780,7 @@ MOCKING_UTILS_BOOL_OPERATOR_RETURNS_FALSE(rcutils_allocator_t, <)
 MOCKING_UTILS_BOOL_OPERATOR_RETURNS_FALSE(rcutils_allocator_t, >)
 MOCKING_UTILS_BOOL_OPERATOR_RETURNS_FALSE(rcutils_allocator_t, !=)
 
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixture, test_mock_publisher_init) {
   rcl_publisher_t publisher = rcl_get_zero_initialized_publisher();
   const rosidl_message_type_support_t * ts =
@@ -790,6 +796,7 @@ TEST_F(TestPublisherFixture, test_mock_publisher_init) {
   rcl_reset_error();
 }
 
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixture, test_mock_publisher_init_fail_qos)
 {
   auto mock = mocking_utils::patch_and_return(
@@ -808,6 +815,7 @@ TEST_F(TestPublisherFixture, test_mock_publisher_init_fail_qos)
 }
 
 // Tests for loaned msgs functions. Mocked as the rmw tier1 vendors don't support it
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixture, test_mock_loaned_functions) {
   rcl_publisher_t publisher = rcl_get_zero_initialized_publisher();
   rcl_publisher_t not_init_publisher = rcl_get_zero_initialized_publisher();
@@ -900,6 +908,7 @@ TEST_F(TestPublisherFixture, test_mock_loaned_functions) {
 }
 
 // Tests mocking ini/fini functions for specific failures
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixture, test_mocks_fail_publisher_init) {
   rcl_publisher_t publisher = rcl_get_zero_initialized_publisher();
   const rosidl_message_type_support_t * ts =
@@ -953,6 +962,7 @@ TEST_F(TestPublisherFixture, test_mocks_fail_publisher_init) {
 }
 
 // Test mocked fail fini publisher
+// TODO(asymingt) enable once mocking works in Bazel.
 TEST_F(TestPublisherFixture, test_mock_publisher_fini_fail) {
   rcl_publisher_t publisher = rcl_get_zero_initialized_publisher();
   const rosidl_message_type_support_t * ts =