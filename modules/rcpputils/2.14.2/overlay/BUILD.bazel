
# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Imports

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "rcpputils",
    srcs = [
        "src/asserts.cpp",
        "src/env.cpp",
        "src/filesystem_helper.cpp",
        "src/find_library.cpp",
        "src/process.cpp",
        "src/shared_library.cpp",
        "src/thread_name.cpp",
    ],
    hdrs = glob(["include/**/*.hpp"]),
    includes = ["include"],
    cxxopts = [
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-fPIC",
        "-std=gnu++17",
    ],
    local_defines = [
        "ROS_PACKAGE_NAME=\\\"rcpputils\\\"",
    ],
    deps = [
        "@rcutils"
    ],
)

# Test

[
    cc_test(
        name = name,
        srcs = ["test/{}".format(src)],
        local_defines = [
            "ROS_PACKAGE_NAME=\\\"rcpputils\\\"",
        ],
        data = glob(["test/dummy_shared_library/**"]),
        deps = [
            "@googletest//:gtest_main",
            "@googletest//:gtest",
            ":rcpputils",
        ],
        env = env,
    )
    for (name, src), env in {
        ("test_asserts_debug", "test_asserts.cpp") : {},
        ("test_thread_name", "test_thread_name.cpp") : {},
        ("test_thread_safety_annotations", "test_thread_safety_annotations.cpp") : {},
        ("test_join", "test_join.cpp") : {},
        ("test_time", "test_time.cpp") : {},
        ("test_env", "test_env.cpp") :  {
            "EMPTY_TEST": "",
            "NORMAL_TEST": "foo",
        },
        ("test_scope_exit", "test_scope_exit.cpp") : {},
        ("test_split", "test_split.cpp") : {},
        ("test_filesystem_helper", "test_filesystem_helper.cpp") : {},
        ("test_filesystem_helper_std", "test_filesystem_helper_std.cpp") : {},
        ("test_find_and_replace", "test_find_and_replace.cpp") : {},
        ("test_pointer_traits", "test_pointer_traits.cpp") : {},
        ("test_process", "test_process.cpp") : {},
        ("test_endian", "test_endian.cpp") : {},
        ("test_library", "test_library.cpp") : {},
        ("test_find_library", "test_find_library.cpp") : {},
        ("test_accumulator", "test_accumulator.cpp") : {},
        ("test_unique_lock", "test_unique_lock.cpp") : {},
    }.items()
]
