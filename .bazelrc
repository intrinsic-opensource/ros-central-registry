# Copyright 2025 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Augment the BCR with a few of our own modules in the docs folder.
common --registry=file:///%workspace%/docs --registry=https://bcr.bazel.build

# Don't allow tests to access the network by default. Also define ROS_HOME
# so that tests don't try and write to ~/.ros_home by default.
test --sandbox_default_allow_network=false
test --test_env=ROS_HOME=$$TEST_UNDECLARED_OUTPUTS_DIR

# Use C++17 standard by default across the whole repo. 
build --cxxopt="-std=c++17"

# Ensure that we use toolchains_llvm instead of the host toolchain.
build --action_env="BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1"

# Force Bazel to use an environment with a static value for PATH, and not to
# use the LD_LIBRARY_PATH. This makes builds robust to terminal refreshes.
build --incompatible_strict_action_env

# Build configuration for RMW implementations.
#   --@rmw_implementation//:rmw=rmw_cyclonedds_cpp
#   --@rmw_implementation//:rmw=rmw_fastrtps_cpp
#   --@rmw_implementation//:rmw=rmw_fastrtps_dynamic_cpp
#   --@rmw_implementation//:rmw=rmw_zenoh_cpp
build --@rmw_implementation//:rmw=rmw_fastrtps_cpp

# ASAN
build:asan --strip=never
build:asan --copt=-fsanitize=address
build:asan --copt=-O0
build:asan --copt=-fno-omit-frame-pointer
build:asan --linkopt=-fsanitize=address

# MSAN
build:msan --strip=never
build:msan --copt=-fsanitize=memory
build:msan --copt=-O0
build:msan --copt=-fno-omit-frame-pointer
build:msan --linkopt=-fsanitize=memory

# TSAN
build:tsan --strip=never
build:tsan --copt=-fsanitize=thread
build:tsan --copt=-O0
build:tsan --copt=-fno-omit-frame-pointer
build:tsan --linkopt=-fsanitize=thread

# Helper for building and testing all modules in the workspace.
build:distribution --target_pattern_file=distribution.txt

# Run distribution tests in a container to make sure that those tests that
# use network and shared memory are isolated from each other.
test:distribution --target_pattern_file=distribution.txt
test:distribution --spawn_strategy docker
test:distribution --experimental_enable_docker_sandbox
test:distribution --experimental_docker_image=ros-central-registry:24.04